# Pipeline for mapping reads, calling variants and creating consensus genomes in fasta format.
# Also produce plink bed files of variants

# This script creates a variable with the samples to be processed, creates the "all" rule 
# and calls the sub-processes of the pipeline

import csv
import warnings

# Random seed:
random_seed: 23102020

# index reference
# tar -xvf genome_assemblies_genome_fasta.tar
# mv FOLDER/GCF_000172595.4_ASM17259v2_genomic.fna.gz GCF_000172595.4_ASM17259v2_genomic.fasta.gz
# bgzip -d GCF_000172595.4_ASM17259v2_genomic.fasta.gz
# picard CreateSequenceDictionary -R REF_GENOME
# bwa index REF_GENOM
# samtools faidx REF_GENOME

# save garinii reference genome as a variable
REF_GENOM = "data/ref_genom/GCF_000172275.2_ASM17227v2_genomic.fasta"

# get samples and gene names as wildcards
AVAILABLE_SAMPLES = glob_wildcards("data/input/raw_data/{sample}.bam")

n_cores = 4

# Build a list of samples to process and where to find them
# A single sample might be associated with multiple run_ids that can be later merged
FINAL_SAMPLES = []

for i in range(len(AVAILABLE_SAMPLES.sample)):
	sample = AVAILABLE_SAMPLES.sample[i]
	FINAL_SAMPLES.append(sample)
	
# Sub-modules, each focusing on a specific task:
include: "snakefiles/mapping.smk"
include: "snakefiles/recalibration.smk"
include: "snakefiles/variant_calling.smk"
include: "snakefiles/filtering.smk"
include: "snakefiles/create_fasta.smk"
include: "snakefiles/newfasta.smk"
#include: "snakefiles/create_stringent_bed.smk"




# Terminal node:
rule all:
	input:
		expand("data/output/called/vcf_allsites/{sample}.allsites.vcf", sample=FINAL_SAMPLES), 
		expand("data/output/called/stringent_fasta/edited/{sample}.fasta", sample=FINAL_SAMPLES), 
		expand("triphasic_covariate_recalibration_diagnostics/{sample}.pdf", sample=FINAL_SAMPLES), 
		#"data/output/called/stringent_bed/all_chrom_SNP_stringent"
		expand("data/output/called/lenientfasta/edited/{sample}.lenient.dict", sample=FINAL_SAMPLES), 
		expand("data/output/called/simple_fasta/edited/{sample}.simple.fasta", sample=FINAL_SAMPLES),
		expand("data/output/called/simple_string_fasta/edited/{sample}.simple.fasta", sample=FINAL_SAMPLES)
		
	
	

#samtools faidx G_REF/GCF_000172595.4_ASM17259v2_genomic.fasta NC_011844.1 NC_011871.1 NC_011875.1 NC_011873.1 NC_011869.1 NC_011867.1 NC_011877.1 > plasmids.fasta
#samtools faidx G_REF/Bgarinii_Chr_WithRef.fasta Far04 > Far04.fasta
#printf '%s\n' '%s/-//g' 'x' | ex Far04.fasta
#cat Far04.fasta plasmids.fasta > GCF_000172595.4_ASM17259v2_genomic.fasta	
	